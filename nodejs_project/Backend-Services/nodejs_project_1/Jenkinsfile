pipeline {
    agent any

    tools {
        nodejs 'node'  // This must match the name configured in Jenkins > Global Tool Configuration
    }

    environment {
        IMAGE_NAME = "bhoomika2897n/nodejsservice-1:$BUILD_NUMBER"
        DOCKER_CREDENTIALS_ID = "Docker_cred"
    }

    parameters {
        choice(
            name: 'Branch_Name',
            choices: ['main', 'master'],
            description: 'Please select branch name'
        )
    }

    stages {
        stage('Print Node Version') {
            steps {
                bat 'node -v'
            }
        }

        stage('Checkout') {
            steps {
                git branch: "${params.Branch_Name}", url: 'https://github.com/bhoomikakrish/Practice--Projects.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('nodejs_project/Backend-Services/nodejs_project_1') {
                    bat 'npm install -g npm-check-updates'
                }
                dir('nodejs_project/Backend-Services/nodejs_project_1') {
                    bat 'npm install'
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                dir('nodejs_project/Backend-Services/nodejs_project_1') {
                    script {
                        docker.withRegistry('', "${DOCKER_CREDENTIALS_ID}") {
                            def app = docker.build("${IMAGE_NAME}")
                            app.push()
                            app.push('latest')
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                bat 'kubectl apply -f nodejs_project/Backend-Services/nodejs_project_1/Kubernetes/Deployment.yaml --validate=false'
            }
        }
    }

    post {
        success {
            echo 'Deployment succeeded!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
